/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BookmarkAddRequest;
import com.konfigthis.client.model.BookmarkMutationResponse;
import com.konfigthis.client.model.Error;
import com.konfigthis.client.model.Get2UsersIdBookmarksResponse;
import com.konfigthis.client.model.Problem;
import java.util.Set;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BookmarksApi
 */
@Disabled
public class BookmarksApiTest {

    private static BookmarksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BookmarksApi(apiClient);
    }

    /**
     * Add Tweet to Bookmarks
     *
     * Adds a Tweet (ID in the body) to the requesting User&#39;s (in the path) bookmarks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTweetTest() throws ApiException {
        String tweetId = null;
        String id = null;
        BookmarkMutationResponse response = api.addTweet(tweetId, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Bookmarks by User
     *
     * Returns Tweet objects that have been bookmarked by the requesting User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserBookmarksTest() throws ApiException {
        String id = null;
        Integer maxResults = null;
        String paginationToken = null;
        Set<String> tweetFields = null;
        Set<String> expansions = null;
        Set<String> mediaFields = null;
        Set<String> pollFields = null;
        Set<String> userFields = null;
        Set<String> placeFields = null;
        Get2UsersIdBookmarksResponse response = api.getUserBookmarks(id)
                .maxResults(maxResults)
                .paginationToken(paginationToken)
                .tweetFields(tweetFields)
                .expansions(expansions)
                .mediaFields(mediaFields)
                .pollFields(pollFields)
                .userFields(userFields)
                .placeFields(placeFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a bookmarked Tweet
     *
     * Removes a Tweet from the requesting User&#39;s bookmarked Tweets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTweetTest() throws ApiException {
        String id = null;
        String tweetId = null;
        BookmarkMutationResponse response = api.removeTweet(id, tweetId)
                .execute();
        // TODO: test validations
    }

}
