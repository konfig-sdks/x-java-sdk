/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Error;
import com.konfigthis.client.model.Get2SpacesByCreatorIdsResponse;
import com.konfigthis.client.model.Get2SpacesIdBuyersResponse;
import com.konfigthis.client.model.Get2SpacesIdResponse;
import com.konfigthis.client.model.Get2SpacesIdTweetsResponse;
import com.konfigthis.client.model.Get2SpacesResponse;
import com.konfigthis.client.model.Get2SpacesSearchResponse;
import com.konfigthis.client.model.Problem;
import java.util.Set;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpacesApi
 */
@Disabled
public class SpacesApiTest {

    private static SpacesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SpacesApi(apiClient);
    }

    /**
     * Search for Spaces
     *
     * Returns Spaces that match the provided query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findMatchingSpacesTest() throws ApiException {
        String query = null;
        String state = null;
        Integer maxResults = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesSearchResponse response = api.findMatchingSpaces(query)
                .state(state)
                .maxResults(maxResults)
                .spaceFields(spaceFields)
                .expansions(expansions)
                .userFields(userFields)
                .topicFields(topicFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve the list of Users who purchased a ticket to the given space
     *
     * Retrieves the list of Users who purchased a ticket to the given space
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBuyersListTest() throws ApiException {
        String id = null;
        String paginationToken = null;
        Integer maxResults = null;
        Set<String> userFields = null;
        Set<String> expansions = null;
        Set<String> tweetFields = null;
        Get2SpacesIdBuyersResponse response = api.getBuyersList(id)
                .paginationToken(paginationToken)
                .maxResults(maxResults)
                .userFields(userFields)
                .expansions(expansions)
                .tweetFields(tweetFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Tweets from a Space.
     *
     * Retrieves Tweets shared in the specified Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTweetsTest() throws ApiException {
        String id = null;
        Integer maxResults = null;
        Set<String> tweetFields = null;
        Set<String> expansions = null;
        Set<String> mediaFields = null;
        Set<String> pollFields = null;
        Set<String> userFields = null;
        Set<String> placeFields = null;
        Get2SpacesIdTweetsResponse response = api.getTweets(id)
                .maxResults(maxResults)
                .tweetFields(tweetFields)
                .expansions(expansions)
                .mediaFields(mediaFields)
                .pollFields(pollFields)
                .userFields(userFields)
                .placeFields(placeFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Space lookup by their creators
     *
     * Returns a variety of information about the Spaces created by the provided User IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lookupByCreatorIdsTest() throws ApiException {
        List<String> userIds = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesByCreatorIdsResponse response = api.lookupByCreatorIds(userIds)
                .spaceFields(spaceFields)
                .expansions(expansions)
                .userFields(userFields)
                .topicFields(topicFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Space lookup by Space ID
     *
     * Returns a variety of information about the Space specified by the requested ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lookupSpaceByIdTest() throws ApiException {
        String id = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesIdResponse response = api.lookupSpaceById(id)
                .spaceFields(spaceFields)
                .expansions(expansions)
                .userFields(userFields)
                .topicFields(topicFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Space lookup up Space IDs
     *
     * Returns a variety of information about the Spaces specified by the requested IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lookupSpaceIdsTest() throws ApiException {
        List<String> ids = null;
        Set<String> spaceFields = null;
        Set<String> expansions = null;
        Set<String> userFields = null;
        Set<String> topicFields = null;
        Get2SpacesResponse response = api.lookupSpaceIds(ids)
                .spaceFields(spaceFields)
                .expansions(expansions)
                .userFields(userFields)
                .topicFields(topicFields)
                .execute();
        // TODO: test validations
    }

}
